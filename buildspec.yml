version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "surajfirst" # Replace with your ECR repository name
    IMAGE_TAG: "latest"

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 312253715348.dkr.ecr.us-east-1.amazonaws.com
      - echo "Installing dependencies and packaging the application..."
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$CODEBUILD_BUILD_ID-$COMMIT_HASH  # Ensure valid characters only
      - mvn clean package -DskipTests # Adjust the command based on your build tool

  build:
    commands:
      - echo "Building the Docker image..."
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - echo "Tagging the Docker image..."
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG 312253715348.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo "Pushing the Docker image to Amazon ECR..."
      - docker push 312253715348.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo "Creating imagedefinitions.json file..."
      - printf '[{"name":"Application","imageUri":"%s"}]' 312253715348.dkr.ecr.us-east-1.amazonaws.com/surajfirst:latest > imagedefinitions.json
      - echo "imagedefinitions.json created."
      - echo "Uploading the build artifact (JAR file) to S3..."
      - aws s3 cp target/*.jar s3://cloud-vendor-artifact/cloud-vendor/ # Replace with your S3 bucket name and key prefix
      - echo "Build completed successfully!"

artifacts:
  files:
    - target/*.jar
    - imagedefinitions.json
  discard-paths: yes
